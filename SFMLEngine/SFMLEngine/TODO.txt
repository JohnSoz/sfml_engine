
Документация:

Engine:
    JsonLoader:

	Object:
	 Clashes:
	  +-Опередлить глубину проникновения aabb персонажа с aabb объекта уровня(Этот способ рабочий, но имеет кучу недостатков)
	  -Добавить k-dops для динамических и статических объектов 
	  -Опередлить глубину проникновения k-dops персонажа с k-dops объекта уровня(Этот способ рабочий, но имеет кучу недостатков)
	  -Вытолкнуть персонажа 
    Animation manager:
      -Заменить list<string,animation> на list<string,animation&&>(на 10мс быстрее пушит анимацию)
      +загрузка анимаций из json
      +загрузка анимаций из xml
    Debug:
     +-Придумать универсальный интерфейс для вывода значения переменных объекта(позиция/скорость и т.д)

	Level:
	  -Сделать загрузку и отрисовку нескольких тайлсетов 
	  +-Оптимизировать рисование уровня:
	   +Отрисовка статичных объектов в текстуру 
	   -Отрисовка только тех объектов, которые попадают в камеру 

	Debug:
	  +Устранить утечку памяти(Возможно как-то связано с ImGui)
	  +Сделать для объектов(в данном случае игрока)менюшку в которой можно будет изменять состояния объекта(задавать ему импульс, менять угол поворота и т.д)
	  +Сделать обновления localRectangle у object т.к во время анимации widht и height изменяются, и дебажный прямоугольник рисуется 'неправильно'
	  -Переделать функцию IMGUI::objectStatusInfo();(избавиться от tuple и template, передавать значения как массив ссылок? Принимать только целые значения?)
	  +Окно логов: 
	   +Категори логов (info,err,system)
	   +Время логов
	   +Сортировка логов или же поиск
	   +Приврепить окно логов к верхнему участку экрана(w = 1920, h~=400)
	   +Сделать для фиксированну позицию и transparency = 40%
	   +Выводить логи при помощи imGui::text, дабы можно было задавать тексту цвет 
       -Оптимизировать отрисовку rectangles' статических объектов

    Game:
     Time:
      ?Стоит запустить update time в отдельном потоке
      
	GUI:
    -Сделать возможным вызов GUI::draw без RenderWinow::display && clear
	Menu:
	 -Сделать класс более гибким(Отрисовка ui по шаблонам?)
	 Standard template: 
      +-MainMenu
	  -PuseMenu
      -InventoriMenu
    
    LUA(использовать lua в качестве скриптового языка):
     -Include LuaBridge 

    Audio:
     Фоновая Музыка:
      -Музыка в меню
      -Музыка в игре
      -Плеер
     Звуки:
      -Звук Ходьбы
      -Звуки нажатия кнопок
      -Звук открытия меню/паузы






























 _______________________________________________МУСОР_______________________________________________________________


 ECS
 +Базовое представление ecs
 +Тестовый компонент
 +Пофиксить баг. При использовании метода SetPosition у PositionComponent позиция не изменется
 +УБРАТЬ ECS
 ___________________________________________________________________________________________________________________



